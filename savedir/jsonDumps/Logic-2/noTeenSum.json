{
  "url": "https://codingbat.com/prob/p182879",
  "section": "Logic-2",
  "problem": "noTeenSum",
  "title": "noTeenSum",
  "prompt": "Given 3 int values, a b c, return their sum. However, if any of the values is a teen -- in the range 13..19 inclusive -- then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper \"public int fixTeen(int n) {\"that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. \"decomposition\"). Define the helper below and at the same indent level as the main noTeenSum().",
  "testcases": [
    "noTeenSum(1, 2, 3) \u2192 6",
    "noTeenSum(2, 13, 1) \u2192 3",
    "noTeenSum(2, 1, 14) \u2192 3"
  ],
  "testcases_extended": [
    "noTeenSum(1, 2, 3) \u2192 6",
    "noTeenSum(2, 13, 1) \u2192 3",
    "noTeenSum(2, 1, 14) \u2192 3",
    "noTeenSum(2, 1, 15) \u2192 18",
    "noTeenSum(2, 1, 16) \u2192 19",
    "noTeenSum(2, 1, 17) \u2192 3",
    "noTeenSum(17, 1, 2) \u2192 3",
    "noTeenSum(2, 15, 2) \u2192 19",
    "noTeenSum(16, 17, 18) \u2192 16",
    "noTeenSum(17, 18, 19) \u2192 0",
    "noTeenSum(15, 16, 1) \u2192 32",
    "noTeenSum(15, 15, 19) \u2192 30",
    "noTeenSum(15, 19, 16) \u2192 31",
    "noTeenSum(5, 17, 18) \u2192 5",
    "noTeenSum(17, 18, 16) \u2192 16",
    "noTeenSum(17, 19, 18) \u2192 0"
  ],
  "provided_code": "public int noTeenSum(int a, int b, int c) {\n  return 0;\n}",
  "difficulty": "212.0"
}