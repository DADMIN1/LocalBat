{
  "url": "https://codingbat.com/prob/p183174",
  "section": "Recursion-1",
  "problem": "nestParen",
  "title": "nestParen",
  "prompt": "Given a string, return true if it is a nesting of zero or more pairs of parenthesis, like \"(())\" or \"((()))\". Suggestion: check the first and last chars, and then recur on what's inside them.",
  "testcases": [
    "nestParen(\"(())\") \u2192 true",
    "nestParen(\"((()))\") \u2192 true",
    "nestParen(\"(((x))\") \u2192 false"
  ],
  "testcases_extended": [
    "nestParen(\"(())\") \u2192 true",
    "nestParen(\"((()))\") \u2192 true",
    "nestParen(\"(((x))\") \u2192 false",
    "nestParen(\"((())\") \u2192 false",
    "nestParen(\"((()()\") \u2192 false",
    "nestParen(\"()\") \u2192 true",
    "nestParen(\"\") \u2192 true",
    "nestParen(\"(yy)\") \u2192 false",
    "nestParen(\"(())\") \u2192 true",
    "nestParen(\"(((y))\") \u2192 false",
    "nestParen(\"((y)))\") \u2192 false",
    "nestParen(\"((()))\") \u2192 true",
    "nestParen(\"(())))\") \u2192 false",
    "nestParen(\"((yy())))\") \u2192 false",
    "nestParen(\"(((())))\") \u2192 true"
  ],
  "provided_code": "public boolean nestParen(String str) {\n  return false;\n}",
  "difficulty": "381.0"
}