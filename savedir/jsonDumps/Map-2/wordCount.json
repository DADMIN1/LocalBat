{
  "url": "https://codingbat.com/prob/p117630",
  "section": "Map-2",
  "problem": "wordCount",
  "title": "wordCount",
  "prompt": "The classic word-count algorithm: given an array of strings, return a Map<String, Integer> with a key for each different string, with the value the number of times that string appears in the array.",
  "testcases": [
    "wordCount([\"a\", \"b\", \"a\", \"c\", \"b\"]) \u2192 {\"a\": 2, \"b\": 2, \"c\": 1}",
    "wordCount([\"c\", \"b\", \"a\"]) \u2192 {\"a\": 1, \"b\": 1, \"c\": 1}",
    "wordCount([\"c\", \"c\", \"c\", \"c\"]) \u2192 {\"c\": 4}"
  ],
  "testcases_extended": [
    "wordCount([\"a\", \"b\", \"a\", \"c\", \"b\"]) \u2192 {\"a\": 2, \"b\": 2, \"c\": 1}",
    "wordCount([\"c\", \"b\", \"a\"]) \u2192 {\"a\": 1, \"b\": 1, \"c\": 1}",
    "wordCount([\"c\", \"c\", \"c\", \"c\"]) \u2192 {\"c\": 4}",
    "wordCount([]) \u2192 {}",
    "wordCount([\"this\", \"and\", \"this\", \"\"]) \u2192 {\"\": 1, \"and\": 1, \"this\": 2}",
    "wordCount([\"x\", \"y\", \"x\", \"Y\", \"X\"]) \u2192 {\"x\": 2, \"X\": 1, \"y\": 1, \"Y\": 1}",
    "wordCount([\"123\", \"0\", \"123\", \"1\"]) \u2192 {\"0\": 1, \"1\": 1, \"123\": 2}",
    "wordCount([\"d\", \"a\", \"e\", \"d\", \"a\", \"d\", \"b\", \"b\", \"z\", \"a\", \"a\", \"b\", \"z\", \"x\", \"b\", \"f\", \"x\", \"two\", \"b\", \"one\", \"two\"]) \u2192 {\"a\": 4, \"b\": 5, \"d\": 3, \"e\": 1, \"f\": 1, \"one\": 1, \"x\": 2, \"z\": 2, \"two\": 2}",
    "wordCount([\"apple\", \"banana\", \"apple\", \"apple\", \"tea\", \"coffee\", \"banana\"]) \u2192 {\"banana\": 2, \"apple\": 3, \"tea\": 1, \"coffee\": 1}"
  ],
  "provided_code": "public Map<String, Integer> wordCount(String[] strings) {\n  return new HashMap<String, Integer>();\n}",
  "difficulty": "350"
}